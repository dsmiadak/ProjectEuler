##Problem 2 (https://projecteuler.net/problem=2)
##Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
##1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
##By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import time
start_time = time.time()

tail = 1
head = 2
i = 0
EvenSum = 0

if tail % 2 == 0:
        EvenSum = EvenSum + tail
if head % 2 == 0:
        EvenSum = EvenSum + head

while (head < 4000000):

    NextValue = tail + head
    tail = head
    head = NextValue
    if NextValue % 2 == 0:
        EvenSum = EvenSum + NextValue
    
print(str(EvenSum))
print("\n--- %s seconds ---" % (time.time() - start_time))    

# Answer = 4613732
