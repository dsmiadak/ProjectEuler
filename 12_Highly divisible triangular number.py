##Problem 12 (https://projecteuler.net/problem=12)
##The sequence of triangle numbers is generated by adding the natural numbers.
##So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
##We can see that 28 is the first triangle number to have over five divisors.
##What is the value of the first triangle number to have over five hundred divisors?

import time
start_time = time.time()

def divisors(num):
        DivNum = 0
        for i in range(1, num + 1):
                if num % i == 0:
                        DivNum += 1 
        return DivNum

k = 2
n = 1
CurrentDiv = 0
print('Start!')
while CurrentDiv < 501 and n < 100000000:
        CurrentDiv = divisors(n)
        if CurrentDiv > 100:
                print(str(n) + ', ' + str(CurrentDiv))
        n = n + k
        k += 1
print(str(n) + ', ' + str(CurrentDiv))

print("\n--- %s seconds ---" % (time.time() - start_time)) 







